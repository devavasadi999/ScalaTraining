[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 48 products, 16 sources, 8 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/actors/EquipmentAllocationActors/MaintenanceTeamActor.scala, ${BASE}/src/main/scala/actors/EquipmentAllocationActors/EmployeeActor.scala, ${BASE}/src/main/scala/actors/EventManagementActors/CateringTeamActor.scala, ${BASE}/src/main/scala/services/EmailService.scala, ${BASE}/src/main/scala/actors/NotificationActor.scala, ${BASE}/src/main/scala/actors/EquipmentAllocationActors/InventoryTeamActor.scala, ${BASE}/src/main/scala/EnvLoader.scala, ${BASE}/src/main/scala/KafkaConsumerApp.scala, ${BASE}/src/main/scala/services/KafkaProducerService.scala, ${BASE}/src/main/scala/actors/EventManagementActors/EntertainmentTeamActor.scala, ${BASE}/src/main/scala/actors/EventManagementActors/DecorationsTeamActor.scala, ${BASE}/src/main/scala/services/TimeZoneConversion.scala, ${BASE}/src/main/scala/actors/EventManagementActors/LogisticsTeamActor.scala, ${BASE}/src/main/scala/actors/EventManagementActors/EventManagerActor.scala, ${BASE}/src/main/scala/services/EmailBuilderService.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/actors/MessageProcessorActor.scala), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/actors/MessageProcessorActor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(actors.MessageProcessorActor, actors.ProcessedMessageJsonProtocol, actors.LocalDateTimeJsonProtocol, actors.ProcessedMessage, actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(actors.MessageProcessorActor, actors.ProcessedMessageJsonProtocol, actors.LocalDateTimeJsonProtocol, actors.ProcessedMessage, actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.MessageProcessorActor, actors.ProcessedMessageJsonProtocol, actors.LocalDateTimeJsonProtocol, actors.ProcessedMessage, actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.ProcessedMessageJsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.ProcessedMessageJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.ProcessedMessageJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.ProcessedMessageJsonProtocol,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(jsonFormat18,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(jsonFormat7,[Default]), UsedName(CharJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat8,[Default]), UsedName(tuple3Format,[Implicit]), UsedName(JF,[Default]), UsedName(StringJsonFormat,[Implicit]), UsedName(jsonFormat11,[Default]), UsedName(finalize,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(!=,[Default]), UsedName(eitherFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName($init$,[Default]), UsedName(jsonFormat20,[Default]), UsedName(extractFieldNames,[Default]), UsedName(productElement2Field,[Default]), UsedName(optionFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(IntJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(jsonFormat15,[Default]), UsedName(lazyFormat,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat19,[Default]), UsedName(processedMessageFormat,[Implicit]), UsedName(safeReader,[Default]), UsedName(jsonFormat10,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat9,[Default]), UsedName(notify,[Default]), UsedName(jsonFormat1,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(clone,[Default]), UsedName(ProcessedMessageJsonProtocol,[Default]), UsedName(lift,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat12,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(jsonFormat14,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(write,[Default]), UsedName(delegate,[Default]), UsedName(rootJsonFormat,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(wait,[Default]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(mapFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(jsonFormat,[Default]), UsedName(viaSeq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(fromField,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat16,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(jsonFormat3,[Default]), UsedName(jsonFormat22,[Default]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(read,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat13,[Default]), UsedName(setFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(OptionFormat,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(jsonFormat5,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The actors.ProcessedMessageJsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ByteJsonFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(processedMessageFormat,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(tuple1Format,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(actors.ProcessedMessageJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.LocalDateTimeJsonProtocol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.LocalDateTimeJsonProtocol[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.LocalDateTimeJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.LocalDateTimeJsonProtocol,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(jsonFormat18,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(jsonFormat7,[Default]), UsedName(CharJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(jsonFormat17,[Default]), UsedName(jsonFormat21,[Default]), UsedName(jsonFormat8,[Default]), UsedName(tuple3Format,[Implicit]), UsedName(JF,[Default]), UsedName(StringJsonFormat,[Implicit]), UsedName(jsonFormat11,[Default]), UsedName(finalize,[Default]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(!=,[Default]), UsedName(eitherFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName($init$,[Default]), UsedName(jsonFormat20,[Default]), UsedName(extractFieldNames,[Default]), UsedName(productElement2Field,[Default]), UsedName(optionFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(productElement2Field$default$4,[Default]), UsedName(IntJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(LocalDateTimeJsonProtocol,[Default]), UsedName(jsonFormat15,[Default]), UsedName(lazyFormat,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(jsonFormat19,[Default]), UsedName(safeReader,[Default]), UsedName(jsonFormat10,[Default]), UsedName(tuple6Format,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat9,[Default]), UsedName(notify,[Default]), UsedName(jsonFormat1,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(clone,[Default]), UsedName(lift,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(jsonFormat12,[Default]), UsedName(LocalDateTimeFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(rootFormat,[Default]), UsedName(jsonFormat14,[Default]), UsedName(iterableFormat,[Implicit]), UsedName(write,[Default]), UsedName(delegate,[Default]), UsedName(rootJsonFormat,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(wait,[Default]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(mapFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(jsonFormat,[Default]), UsedName(viaSeq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(fromField,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(jsonFormat16,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(jsonFormat3,[Default]), UsedName(jsonFormat22,[Default]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(read,[Default]), UsedName(jsonFormat6,[Default]), UsedName(jsonFormat13,[Default]), UsedName(setFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(OptionFormat,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(jsonFormat2,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(jsonFormat5,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The actors.LocalDateTimeJsonProtocol has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ByteJsonFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(optionFormat,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(LocalDateTimeFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(seqFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(tuple1Format,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(actors.LocalDateTimeJsonProtocol)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.MessageProcessorActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.MessageProcessorActor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.MessageProcessorActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.MessageProcessorActor,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(postRestart,[Default]), UsedName(context,[Implicit]), UsedName(aroundPostRestart,[Default]), UsedName(receive,[Default]), UsedName(sender,[Default]), UsedName(aroundPreStart,[Default]), UsedName(preStart,[Default]), UsedName(notify,[Default]), UsedName(preRestart,[Default]), UsedName(MessageProcessorActor,[Default]), UsedName(clone,[Default]), UsedName(self,[Implicit]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(actors;MessageProcessorActor;init;,[Default]), UsedName(Receive,[Default]), UsedName(aroundPostStop,[Default]), UsedName(asInstanceOf,[Default]), UsedName(postStop,[Default]), UsedName(unhandled,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(aroundReceive,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The actors.MessageProcessorActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(actors.MessageProcessorActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(LocalDateTimeFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(write,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(read,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(LocalDateTimeFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from actors.ProcessedMessage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.ProcessedMessage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(actors.ProcessedMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(actors.ProcessedMessage,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(body,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElementNames,[Default]), UsedName(frequencyType,[Default]), UsedName(canEqual,[Default]), UsedName(ProcessedMessage,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(clone,[Default]), UsedName(copy$default$5,[Default]), UsedName(unapply,[Default]), UsedName(actors;ProcessedMessage;init;,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(tupled,[Default]), UsedName(frequencyValues,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toEmails,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName(subject,[Default]), UsedName(hashCode,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$1,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The actors.ProcessedMessage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(body,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElementNames,[Default]), UsedName(frequencyType,[Default]), UsedName(canEqual,[Default]), UsedName(ProcessedMessage,[Default]), UsedName(notify,[Default]), UsedName(copy$default$2,[Default]), UsedName(clone,[Default]), UsedName(copy$default$5,[Default]), UsedName(unapply,[Default]), UsedName(actors;ProcessedMessage;init;,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(tupled,[Default]), UsedName(frequencyValues,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toEmails,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName(subject,[Default]), UsedName(hashCode,[Default]), UsedName(productElementName,[Default]), UsedName(copy$default$1,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(actors.ProcessedMessage)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: actors.MessageProcessorActor, actors.ProcessedMessageJsonProtocol, actors.LocalDateTimeJsonProtocol, actors.ProcessedMessage, actors.LocalDateTimeJsonProtocol.LocalDateTimeFormat[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
