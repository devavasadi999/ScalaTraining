package models

import play.api.libs.functional.syntax._
import play.api.libs.json._

case class Reservation(
                        reservationId: Option[Long], // Optional ID (Auto-generated by DB)
                        roomId: Int,
                        employeeName: String,
                        employeeMail: String,
                        department: String,
                        purpose: String,
                        startTime: String,
                        endTime: String,
                        createdBy: Long
                      )

object Reservation {
  implicit val reservationReads: Reads[Reservation] = (
    (JsPath \ "reservationId").readNullable[Long] and
      (JsPath \ "roomId").read[Int] and
      (JsPath \ "employeeName").read[String] and
      (JsPath \ "employeeMail").read[String] and
      (JsPath \ "department").read[String] and
      (JsPath \ "purpose").read[String] and
      (JsPath \ "startTime").read[String] and
      (JsPath \ "endTime").read[String] and
      (JsPath \ "createdBy").read[Long]
    )(Reservation.apply _)

  implicit val reservationWrites: Writes[Reservation] = Json.writes[Reservation]

  implicit val reservationFormat: Format[Reservation] = Format(reservationReads, reservationWrites)
}
